/////////////////////////////////////////////////////////////////
//															   //
// This code is generated by a tool                            //
// https://github.com/StevenThuriot/dotnet-openapi-generator   //
//															   //
/////////////////////////////////////////////////////////////////

#nullable enable

#pragma warning disable CS8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.

namespace Lamashare.CLI.ApiGen.Models;

[System.CodeDom.Compiler.GeneratedCode("dotnet-openapi-generator", "8.0.0-preview.15+2dc8cfca012adb9b7e1a243f167db99da7b5cfe4")]
[System.Text.Json.Serialization.JsonConverter(typeof(EFileTransactionTypeEnumConverter))]
public enum EFileTransactionType
{
	PULL,
	PUSH,
}

public static class EFileTransactionTypeFastEnum
{
     public static string ToString(EFileTransactionType value) => value switch
     {
         EFileTransactionType.PULL => "PULL",
         EFileTransactionType.PUSH => "PUSH",
         _ => throw new System.NotSupportedException(value + " is not a supported Enum value")
     };

     public static EFileTransactionType FromString(string? value) => value switch
     {
         "PULL" => EFileTransactionType.PULL,
         "PUSH" => EFileTransactionType.PUSH,
         _ => throw new System.NotSupportedException((value ?? "NULL") + " is not a supported Enum value")
     };
}

public class EFileTransactionTypeEnumConverter : System.Text.Json.Serialization.JsonConverter<EFileTransactionType>
{
    public override EFileTransactionType Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
    {
        return EFileTransactionTypeFastEnum.FromString(reader.GetString());
    }

    public override void Write(System.Text.Json.Utf8JsonWriter writer, EFileTransactionType value, System.Text.Json.JsonSerializerOptions options)
    {
        writer.WriteStringValue(EFileTransactionTypeFastEnum.ToString(value));
    }
}
